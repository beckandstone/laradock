version: '3'

services:

### Applications Code Container #############################

    applications:
      image: tianon/true
      volumes:
        - data:/var/www

### Workspace Utilities Container ###########################

    workspace:
      build:
        context: ./workspace
        args:
          - INSTALL_XDEBUG=true
          - INSTALL_BLACKFIRE=false
          - INSTALL_SOAP=false
          - INSTALL_MONGO=false
          - INSTALL_MSSQL=false
          - INSTALL_NODE=false
          - INSTALL_YARN=false
          - INSTALL_DRUSH=false
          - INSTALL_AEROSPIKE=false
          - INSTALL_V8JS=false
          - COMPOSER_GLOBAL_INSTALL=false
          - INSTALL_WORKSPACE_SSH=false
          - INSTALL_LARAVEL_ENVOY=false
          - INSTALL_LARAVEL_INSTALLER=false
          - INSTALL_DEPLOYER=false
          - INSTALL_LINUXBREW=false
          - INSTALL_MC=false
          - INSTALL_IMAGE_OPTIMIZERS=false
          - PUID=1000
          - PGID=1000
          - NODE_VERSION=stable
          - YARN_VERSION=latest
          - TZ=UTC
          - BLACKFIRE_CLIENT_ID=<client_id>
          - BLACKFIRE_CLIENT_TOKEN=<client_token>
        dockerfile: "Dockerfile-71"
      volumes:
        - data:/var/www
      extra_hosts:
        - "dockerhost:104.236.48.91"
      ports:
        - "2222:22"
      tty: true
      networks:
        - frontend
        - backend

### PHP-FPM Container #######################################

    php-fpm:
      build:
        context: ./php-fpm
        args:
          - INSTALL_XDEBUG=false
          - INSTALL_BLACKFIRE=false
          - INSTALL_SOAP=false
          - INSTALL_MONGO=false
          - INSTALL_MSSQL=false
          - INSTALL_ZIP_ARCHIVE=false
          - INSTALL_BCMATH=false
          - INSTALL_PHPREDIS=false
          - INSTALL_MEMCACHED=false
          - INSTALL_OPCACHE=false
          - INSTALL_EXIF=false
          - INSTALL_AEROSPIKE=false
          - INSTALL_MYSQLI=false
          - INSTALL_TOKENIZER=false
          - INSTALL_INTL=false
          - INSTALL_GHOSTSCRIPT=false
          - INSTALL_LDAP=false
          - INSTALL_SWOOLE=false
          - INSTALL_IMAGE_OPTIMIZERS=false
        dockerfile: "Dockerfile-71"
      volumes:
        - data:/var/www
      volumes:
        - ./php-fpm/php71.ini:/usr/local/etc/php/php.ini
      expose:
        - "9000"
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:104.236.48.91"
      environment:
        - PHP_IDE_CONFIG=laradock
      networks:
        - backend

### Apache Server Container #################################

    apache2:
      build:
        context: ./apache2
        args:
          - PHP_SOCKET=php-fpm:9000
      volumes:
        - data:/var/www
      volumes:
        - ./logs/apache2:/var/log/apache2
        - ./apache2/sites:/etc/apache2/sites-available
      ports:
        - "801:80"
        - "443:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### MySQL Container #########################################

    mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=8.0
      environment:
        - MYSQL_DATABASE=MyShedDB
        - MYSQL_USER=MyShed
        - MYSQL_PASSWORD=!2e2v~ZVKz7m5[qu
        - MYSQL_ROOT_PASSWORD=root
        - TZ=UTC
      volumes:
        - ~/.laradock/data/mysql:/var/lib/mysql
        - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      ports:
        - "33061:3306"
      networks:
        - backend

### Balancer Haproxy ##########################################

    balancer:
      build: ./haproxy
      ports:
        - "8085:8085"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      links:
        - proxy
        - proxy2

### Jenkins ###################################################

    jenkins:
      build: ./jenkins
      environment:
        JAVA_OPTS: "-Djava.awt.headless=true"
      ports:
        - "50000:50000"
        - "8090:8080"
      privileged: true
      volumes:
        - ./jenkins/jenkins_home:/var/jenkins_home
        - /var/run/docker.sock:/var/run/docker.sock
      networks:
        - frontend
        - backend

### Networks Setup ############################################

networks:
  frontend:
  backend:

### Volumes Setup #############################################

volumes:
  data:
